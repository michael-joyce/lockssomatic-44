# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    router.request_context.scheme: '%env(string:ROUTE_PROTOCOL)%'
    router.request_context.host: '%env(string:ROUTE_HOST)%'
    router.request_context.base_url: '%env(string:ROUTE_BASE)%'

    asset.request_context.base_path: '%env(string:ROUTE_BASE)%'
    asset.request_context.secure: auto

    lom.download_dir: data/download
    lom.hash_methods: '%env(csv:LOM_HASH_METHODS)%'
    lom.allowed_ips: '%env(csv:LOM_ALLOWED_IPS)%'

    lom.aus_per_titledb: 50
    lom.boxstatus.sizewarning: 0.9
    lom.boxstatus.subject: LOCKSSOMatic Box Status
    lom.boxstatus.sender: '%env(LOM_STATUS_SENDER)%'
    lom.boxstatus.contact: '%env(LOM_STATUS_CONTACT)%'

    lockss.deposit.limit: 150

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    monolog.formatter.request:
        class: Monolog\Formatter\LineFormatter
        arguments:
            - "[%%datetime%%] [%%extra.ip%%] %%channel%%.%%level_name%%: %%message%%\n"

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments', 'knp_paginator.injectable']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Controller\LockssController:
        calls:
            - { method: setLogger, arguments: ['@monolog.logger.lockss'] }

    App\Controller\SwordController:
        calls:
            - { method: setLogger, arguments: ['@monolog.logger.sword'] }

    App\EventListener\BoxListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
        calls:
            - { method: setLogger, arguments: ['@logger'] }

    App\EventListener\SwordExceptionListener:
        arguments:
            $env: "%kernel.environment%"
        tags:
            - { name: kernel.event_listener, event: kernel.exception }
            - { name: kernel.event_listener, event: kernel.controller }

    App\Logger\RequestProcessor:
        tags:
            - { name: monolog.processor }

    App\Menu\Builder:
        tags:
            - { name: knp_menu.menu_builder, method: mainMenu, alias: main}

    App\Services\AuManager:
        calls:
            - { method: setLogger, arguments: ['@logger'] }

    App\Services\BoxNotifier:
        arguments:
            $sender: '%lom.boxstatus.sender%'
            $contact: '%lom.boxstatus.contact%'

    App\Services\Lockss\ContentFetcher:
        calls:
            - { method: setLogger, arguments: [ '@monolog.logger.soap' ] }

    App\Services\Lockss\LockssService:
        calls:
            - { method: setLogger, arguments: [ '@monolog.logger.soap' ] }

    App\Services\ConfigExporter:
        arguments:
            $ausPerTitleDb: '%lom.aus_per_titledb%'

    App\Services\ConfigUpdater:
        arguments:
            $ausPerTitleDb: '%lom.aus_per_titledb%'

    App\Services\FilePaths:
        arguments:
            $root: '%kernel.project_dir%'
            $downloadDir: '%lom.download_dir%'

    App\Command\UpgradeCommand:
        arguments:
            $oldEm: '@doctrine.dbal.oldversion_connection'
